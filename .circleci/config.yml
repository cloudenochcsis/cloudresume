version: 2.1
orbs:
  node: circleci/node@5.0.2

jobs:
  build-and-test:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Check versions
          command: |
            node --version
            npm --version
            yarn --version
      - run:
          name: Run linter
          command: yarn run eslint .
      - run:
          name: Run tests
          command: yarn test --passWithNoTests
      - run:
          name: Build application
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - build
            - backend

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "IrFlIKv6KdHjCdm+FroGYwh1FpSvaUDozW+QbOoZRfk"
      - run:
          name: Deploy to DigitalOcean
          command: |
            # Deploy frontend
            ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} 'rm -rf /var/www/portfolio/*'
            scp -r build/* root@${DROPLET_IP}:/var/www/portfolio/
            
            # Deploy backend
            ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} << EOF
              # Create backend directory if it doesn't exist
              mkdir -p /var/www/portfolio/backend
              
              # Remove old backend files
              rm -rf /var/www/portfolio/backend/*
              
              # Copy new backend files
              EOF
            scp -r backend/* root@${DROPLET_IP}:/var/www/portfolio/backend/
            
            # Setup and run backend
            ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} << EOF
              cd /var/www/portfolio/backend
              npm install
              echo "MONGODB_URI=${MONGODB_URI}" > .env
              pm2 restart server || pm2 start server.js
              
              # Reload Nginx
              sudo systemctl reload nginx
            EOF

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: main